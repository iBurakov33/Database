// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RecipeApp.Data_Access.EFcore;

namespace RecipeApp.Migrations
{
    [DbContext(typeof(RecipeAppWebApiContext))]
    partial class RecipeAppWebApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Ingredient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("measurementId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("measurementId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Measurement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Measurments");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Recipe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("MakeTime")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Recipe_Ingredient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ingredientId")
                        .HasColumnType("integer");

                    b.Property<int>("recipe_typeId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("ingredientId");

                    b.HasIndex("recipe_typeId");

                    b.ToTable("Recipes_Ingredients");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Recipe_Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Recipes_Types");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Ingredient", b =>
                {
                    b.HasOne("RecipeApp.Data_Access.Models.Measurement", "measurement")
                        .WithMany()
                        .HasForeignKey("measurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("measurement");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Recipe_Ingredient", b =>
                {
                    b.HasOne("RecipeApp.Data_Access.Models.Ingredient", "ingredient")
                        .WithMany()
                        .HasForeignKey("ingredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp.Data_Access.Models.Recipe_Type", "recipe_type")
                        .WithMany()
                        .HasForeignKey("recipe_typeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingredient");

                    b.Navigation("recipe_type");
                });

            modelBuilder.Entity("RecipeApp.Data_Access.Models.Recipe_Type", b =>
                {
                    b.HasOne("RecipeApp.Data_Access.Models.Recipe", "recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp.Data_Access.Models.Type", "type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recipe");

                    b.Navigation("type");
                });
#pragma warning restore 612, 618
        }
    }
}
